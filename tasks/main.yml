---
- include: install_docker_debian.yml
  when: "ansible_os_family == 'Debian'"

- name: Run redis container
  docker:
      name: redis
      image: redis:{{ redis.version }}
      ports: "{{ redis.ports }}"
  when: redis.use == "yes"

- name: Run postgres container
  docker:
      name: postgres
      image: postgres:{{ postgres.version }}
      ports: "{{ postgres.ports }}"
  when: postgres.use == "yes"

- name: Run registry container
  docker: 
      name: registry
      image: registry:{{ registry.version }}
      ports: "{{ registry.ports }}"
      env: "{% for key,value in registry.iteritems() %}{{ key|upper }}={{ value }}{% if not loop.last %}{{','}}{% endif %}{% endfor %}"
      links: "{% if redis.use == 'yes' %}redis:redis{% endif %}"

- name: Install python-passlib for htpasswd ansible module
  apt: pkg=python-passlib state=present update_cache=true #for htpasswd

- name: Ensure nginx config dir
  file: path={{ nginx.config_dir_path }} state=directory 

- name: Make basic auth for nginx
  htpasswd:
      path: "{{ nginx.config_dir_path}}/{{ nginx.auth_basic_user_file }}"
      name: "{{ nginx.username }}"
      password: "{{ nginx.password }}"
      owner: root
      group: root 
      mode: 0644
      state: present
  when: nginx.auth_basic != "off"

- name: Copy ca for nginx ssl
  copy: src={{ nginx.ssl_certificate_src }} dest={{ nginx.config_dir_path }}/{{ nginx.ssl_certificate }}
  when: nginx.use_ssl == True

- name: Copy key for nginx ssl 
  copy: src={{ nginx.ssl_certificate_key_src }} dest={{ nginx.config_dir_path }}/{{ nginx.ssl_certificate_key }}
  when: nginx.use_ssl == True

- name: Make nginx configuration for registry
  template: src=nginx.registry.conf dest="{{ nginx.config_dir_path }}/nginx.conf"

- name: Run nginx container
  docker: 
      name: nginx
      image: nginx:{{ nginx.version }} 
      ports: "{{ nginx.ports }}"
      links: 
        - registry:registry
      volumes: 
        - "{{ nginx.config_dir_path }}/nginx.conf:/etc/nginx/nginx.conf"
        - "{{ nginx.config_dir_path }}/{{ nginx.auth_basic_user_file }}:/etc/nginx/registry.htpasswd"
        - "{{ nginx.config_dir_path }}/{{ nginx.ssl_certificate }}:/etc/nginx/registry.crt"
        - "{{ nginx.config_dir_path }}/{{ nginx.ssl_certificate_key }}:/etc/nginx/registry.key"

- name: logrotate
  logrotate: name=docker-log path=/var/lib/docker/containers/*/*.log
  args:
    options:
        - daily
        - size 200M
        - rotate 3 
        - missingok
        - copytruncate
